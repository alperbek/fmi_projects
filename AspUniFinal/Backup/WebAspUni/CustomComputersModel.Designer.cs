//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CustomComputersAspModel", "FK_BoxSet_Cpu", "Cpu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebAspUni.Cpu), "BoxSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebAspUni.BoxSet), true)]
[assembly: EdmRelationshipAttribute("CustomComputersAspModel", "FK_BoxSet_Hdd", "Hdd", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebAspUni.Hdd), "BoxSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebAspUni.BoxSet), true)]
[assembly: EdmRelationshipAttribute("CustomComputersAspModel", "FK_BoxSet_VideoCard", "VideoCard", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebAspUni.VideoCard), "BoxSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebAspUni.BoxSet), true)]
[assembly: EdmRelationshipAttribute("CustomComputersAspModel", "FK_Configuration_BoxSet", "BoxSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebAspUni.BoxSet), "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebAspUni.Configuration), true)]
[assembly: EdmRelationshipAttribute("CustomComputersAspModel", "FK_Configuration_Monitor", "Monitor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebAspUni.Monitor), "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebAspUni.Configuration), true)]
[assembly: EdmRelationshipAttribute("CustomComputersAspModel", "FK_Peripherals_Configuration", "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebAspUni.Configuration), "Peripherals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebAspUni.Peripheral), true)]
[assembly: EdmRelationshipAttribute("CustomComputersAspModel", "FK_Software_Configuration", "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebAspUni.Configuration), "Software", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebAspUni.Software), true)]
[assembly: EdmRelationshipAttribute("CustomComputersAspModel", "FK_Monitor_Materials1", "Materials", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebAspUni.Material), "Monitor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebAspUni.Monitor), true)]

#endregion

namespace WebAspUni
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CustomComputersAspEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CustomComputersAspEntities object using the connection string found in the 'CustomComputersAspEntities' section of the application configuration file.
        /// </summary>
        public CustomComputersAspEntities() : base("name=CustomComputersAspEntities", "CustomComputersAspEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CustomComputersAspEntities object.
        /// </summary>
        public CustomComputersAspEntities(string connectionString) : base(connectionString, "CustomComputersAspEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CustomComputersAspEntities object.
        /// </summary>
        public CustomComputersAspEntities(EntityConnection connection) : base(connection, "CustomComputersAspEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BoxSet> BoxSets
        {
            get
            {
                if ((_BoxSets == null))
                {
                    _BoxSets = base.CreateObjectSet<BoxSet>("BoxSets");
                }
                return _BoxSets;
            }
        }
        private ObjectSet<BoxSet> _BoxSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration> Configurations
        {
            get
            {
                if ((_Configurations == null))
                {
                    _Configurations = base.CreateObjectSet<Configuration>("Configurations");
                }
                return _Configurations;
            }
        }
        private ObjectSet<Configuration> _Configurations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cpu> Cpus
        {
            get
            {
                if ((_Cpus == null))
                {
                    _Cpus = base.CreateObjectSet<Cpu>("Cpus");
                }
                return _Cpus;
            }
        }
        private ObjectSet<Cpu> _Cpus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hdd> Hdds
        {
            get
            {
                if ((_Hdds == null))
                {
                    _Hdds = base.CreateObjectSet<Hdd>("Hdds");
                }
                return _Hdds;
            }
        }
        private ObjectSet<Hdd> _Hdds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Material> Materials
        {
            get
            {
                if ((_Materials == null))
                {
                    _Materials = base.CreateObjectSet<Material>("Materials");
                }
                return _Materials;
            }
        }
        private ObjectSet<Material> _Materials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Monitor> Monitors
        {
            get
            {
                if ((_Monitors == null))
                {
                    _Monitors = base.CreateObjectSet<Monitor>("Monitors");
                }
                return _Monitors;
            }
        }
        private ObjectSet<Monitor> _Monitors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Peripheral> Peripherals
        {
            get
            {
                if ((_Peripherals == null))
                {
                    _Peripherals = base.CreateObjectSet<Peripheral>("Peripherals");
                }
                return _Peripherals;
            }
        }
        private ObjectSet<Peripheral> _Peripherals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Software> Softwares
        {
            get
            {
                if ((_Softwares == null))
                {
                    _Softwares = base.CreateObjectSet<Software>("Softwares");
                }
                return _Softwares;
            }
        }
        private ObjectSet<Software> _Softwares;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VideoCard> VideoCards
        {
            get
            {
                if ((_VideoCards == null))
                {
                    _VideoCards = base.CreateObjectSet<VideoCard>("VideoCards");
                }
                return _VideoCards;
            }
        }
        private ObjectSet<VideoCard> _VideoCards;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BoxSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoxSets(BoxSet boxSet)
        {
            base.AddObject("BoxSets", boxSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurations(Configuration configuration)
        {
            base.AddObject("Configurations", configuration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cpus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCpus(Cpu cpu)
        {
            base.AddObject("Cpus", cpu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Hdds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHdds(Hdd hdd)
        {
            base.AddObject("Hdds", hdd);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Materials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterials(Material material)
        {
            base.AddObject("Materials", material);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Monitors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonitors(Monitor monitor)
        {
            base.AddObject("Monitors", monitor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Peripherals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeripherals(Peripheral peripheral)
        {
            base.AddObject("Peripherals", peripheral);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Softwares EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSoftwares(Software software)
        {
            base.AddObject("Softwares", software);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VideoCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVideoCards(VideoCard videoCard)
        {
            base.AddObject("VideoCards", videoCard);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="BoxSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BoxSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BoxSet object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="cupId">Initial value of the cupId property.</param>
        /// <param name="motherboard">Initial value of the motherboard property.</param>
        /// <param name="ram">Initial value of the ram property.</param>
        /// <param name="videoCardId">Initial value of the videoCardId property.</param>
        /// <param name="coolingSystem">Initial value of the coolingSystem property.</param>
        /// <param name="powerSupply">Initial value of the powerSupply property.</param>
        /// <param name="expansionCards">Initial value of the expansionCards property.</param>
        /// <param name="hddId">Initial value of the hddId property.</param>
        /// <param name="removableDevices">Initial value of the removableDevices property.</param>
        /// <param name="box">Initial value of the box property.</param>
        public static BoxSet CreateBoxSet(global::System.Int32 id, global::System.Int32 cupId, global::System.String motherboard, global::System.String ram, global::System.Int32 videoCardId, global::System.String coolingSystem, global::System.String powerSupply, global::System.String expansionCards, global::System.Int32 hddId, global::System.String removableDevices, global::System.String box)
        {
            BoxSet boxSet = new BoxSet();
            boxSet.id = id;
            boxSet.cupId = cupId;
            boxSet.motherboard = motherboard;
            boxSet.ram = ram;
            boxSet.videoCardId = videoCardId;
            boxSet.coolingSystem = coolingSystem;
            boxSet.powerSupply = powerSupply;
            boxSet.expansionCards = expansionCards;
            boxSet.hddId = hddId;
            boxSet.removableDevices = removableDevices;
            boxSet.box = box;
            return boxSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cupId
        {
            get
            {
                return _cupId;
            }
            set
            {
                OncupIdChanging(value);
                ReportPropertyChanging("cupId");
                _cupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cupId");
                OncupIdChanged();
            }
        }
        private global::System.Int32 _cupId;
        partial void OncupIdChanging(global::System.Int32 value);
        partial void OncupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String motherboard
        {
            get
            {
                return _motherboard;
            }
            set
            {
                OnmotherboardChanging(value);
                ReportPropertyChanging("motherboard");
                _motherboard = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("motherboard");
                OnmotherboardChanged();
            }
        }
        private global::System.String _motherboard;
        partial void OnmotherboardChanging(global::System.String value);
        partial void OnmotherboardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ram
        {
            get
            {
                return _ram;
            }
            set
            {
                OnramChanging(value);
                ReportPropertyChanging("ram");
                _ram = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ram");
                OnramChanged();
            }
        }
        private global::System.String _ram;
        partial void OnramChanging(global::System.String value);
        partial void OnramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 videoCardId
        {
            get
            {
                return _videoCardId;
            }
            set
            {
                OnvideoCardIdChanging(value);
                ReportPropertyChanging("videoCardId");
                _videoCardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("videoCardId");
                OnvideoCardIdChanged();
            }
        }
        private global::System.Int32 _videoCardId;
        partial void OnvideoCardIdChanging(global::System.Int32 value);
        partial void OnvideoCardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String coolingSystem
        {
            get
            {
                return _coolingSystem;
            }
            set
            {
                OncoolingSystemChanging(value);
                ReportPropertyChanging("coolingSystem");
                _coolingSystem = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("coolingSystem");
                OncoolingSystemChanged();
            }
        }
        private global::System.String _coolingSystem;
        partial void OncoolingSystemChanging(global::System.String value);
        partial void OncoolingSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String powerSupply
        {
            get
            {
                return _powerSupply;
            }
            set
            {
                OnpowerSupplyChanging(value);
                ReportPropertyChanging("powerSupply");
                _powerSupply = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("powerSupply");
                OnpowerSupplyChanged();
            }
        }
        private global::System.String _powerSupply;
        partial void OnpowerSupplyChanging(global::System.String value);
        partial void OnpowerSupplyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String expansionCards
        {
            get
            {
                return _expansionCards;
            }
            set
            {
                OnexpansionCardsChanging(value);
                ReportPropertyChanging("expansionCards");
                _expansionCards = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("expansionCards");
                OnexpansionCardsChanged();
            }
        }
        private global::System.String _expansionCards;
        partial void OnexpansionCardsChanging(global::System.String value);
        partial void OnexpansionCardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 hddId
        {
            get
            {
                return _hddId;
            }
            set
            {
                OnhddIdChanging(value);
                ReportPropertyChanging("hddId");
                _hddId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hddId");
                OnhddIdChanged();
            }
        }
        private global::System.Int32 _hddId;
        partial void OnhddIdChanging(global::System.Int32 value);
        partial void OnhddIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String removableDevices
        {
            get
            {
                return _removableDevices;
            }
            set
            {
                OnremovableDevicesChanging(value);
                ReportPropertyChanging("removableDevices");
                _removableDevices = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("removableDevices");
                OnremovableDevicesChanged();
            }
        }
        private global::System.String _removableDevices;
        partial void OnremovableDevicesChanging(global::System.String value);
        partial void OnremovableDevicesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String box
        {
            get
            {
                return _box;
            }
            set
            {
                OnboxChanging(value);
                ReportPropertyChanging("box");
                _box = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("box");
                OnboxChanged();
            }
        }
        private global::System.String _box;
        partial void OnboxChanging(global::System.String value);
        partial void OnboxChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_BoxSet_Cpu", "Cpu")]
        public Cpu Cpu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cpu>("CustomComputersAspModel.FK_BoxSet_Cpu", "Cpu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cpu>("CustomComputersAspModel.FK_BoxSet_Cpu", "Cpu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cpu> CpuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cpu>("CustomComputersAspModel.FK_BoxSet_Cpu", "Cpu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cpu>("CustomComputersAspModel.FK_BoxSet_Cpu", "Cpu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_BoxSet_Hdd", "Hdd")]
        public Hdd Hdd
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hdd>("CustomComputersAspModel.FK_BoxSet_Hdd", "Hdd").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hdd>("CustomComputersAspModel.FK_BoxSet_Hdd", "Hdd").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hdd> HddReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hdd>("CustomComputersAspModel.FK_BoxSet_Hdd", "Hdd");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hdd>("CustomComputersAspModel.FK_BoxSet_Hdd", "Hdd", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_BoxSet_VideoCard", "VideoCard")]
        public VideoCard VideoCard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VideoCard>("CustomComputersAspModel.FK_BoxSet_VideoCard", "VideoCard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VideoCard>("CustomComputersAspModel.FK_BoxSet_VideoCard", "VideoCard").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VideoCard> VideoCardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VideoCard>("CustomComputersAspModel.FK_BoxSet_VideoCard", "VideoCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VideoCard>("CustomComputersAspModel.FK_BoxSet_VideoCard", "VideoCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Configuration_BoxSet", "Configuration")]
        public EntityCollection<Configuration> Configurations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Configuration>("CustomComputersAspModel.FK_Configuration_BoxSet", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Configuration>("CustomComputersAspModel.FK_Configuration_BoxSet", "Configuration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="Configuration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="boxId">Initial value of the boxId property.</param>
        /// <param name="monitorId">Initial value of the monitorId property.</param>
        public static Configuration CreateConfiguration(global::System.Int32 id, global::System.Int32 boxId, global::System.Int32 monitorId)
        {
            Configuration configuration = new Configuration();
            configuration.id = id;
            configuration.boxId = boxId;
            configuration.monitorId = monitorId;
            return configuration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 boxId
        {
            get
            {
                return _boxId;
            }
            set
            {
                OnboxIdChanging(value);
                ReportPropertyChanging("boxId");
                _boxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("boxId");
                OnboxIdChanged();
            }
        }
        private global::System.Int32 _boxId;
        partial void OnboxIdChanging(global::System.Int32 value);
        partial void OnboxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 monitorId
        {
            get
            {
                return _monitorId;
            }
            set
            {
                OnmonitorIdChanging(value);
                ReportPropertyChanging("monitorId");
                _monitorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("monitorId");
                OnmonitorIdChanged();
            }
        }
        private global::System.Int32 _monitorId;
        partial void OnmonitorIdChanging(global::System.Int32 value);
        partial void OnmonitorIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Configuration_BoxSet", "BoxSet")]
        public BoxSet BoxSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoxSet>("CustomComputersAspModel.FK_Configuration_BoxSet", "BoxSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoxSet>("CustomComputersAspModel.FK_Configuration_BoxSet", "BoxSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoxSet> BoxSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoxSet>("CustomComputersAspModel.FK_Configuration_BoxSet", "BoxSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoxSet>("CustomComputersAspModel.FK_Configuration_BoxSet", "BoxSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Configuration_Monitor", "Monitor")]
        public Monitor Monitor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Monitor>("CustomComputersAspModel.FK_Configuration_Monitor", "Monitor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Monitor>("CustomComputersAspModel.FK_Configuration_Monitor", "Monitor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Monitor> MonitorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Monitor>("CustomComputersAspModel.FK_Configuration_Monitor", "Monitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Monitor>("CustomComputersAspModel.FK_Configuration_Monitor", "Monitor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Peripherals_Configuration", "Peripherals")]
        public EntityCollection<Peripheral> Peripherals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Peripheral>("CustomComputersAspModel.FK_Peripherals_Configuration", "Peripherals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Peripheral>("CustomComputersAspModel.FK_Peripherals_Configuration", "Peripherals", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Software_Configuration", "Software")]
        public EntityCollection<Software> Softwares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Software>("CustomComputersAspModel.FK_Software_Configuration", "Software");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Software>("CustomComputersAspModel.FK_Software_Configuration", "Software", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="Cpu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cpu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cpu object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="producer">Initial value of the producer property.</param>
        public static Cpu CreateCpu(global::System.Int32 id, global::System.String name, global::System.String producer)
        {
            Cpu cpu = new Cpu();
            cpu.id = id;
            cpu.name = name;
            cpu.producer = producer;
            return cpu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String producer
        {
            get
            {
                return _producer;
            }
            set
            {
                OnproducerChanging(value);
                ReportPropertyChanging("producer");
                _producer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("producer");
                OnproducerChanged();
            }
        }
        private global::System.String _producer;
        partial void OnproducerChanging(global::System.String value);
        partial void OnproducerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_BoxSet_Cpu", "BoxSet")]
        public EntityCollection<BoxSet> BoxSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoxSet>("CustomComputersAspModel.FK_BoxSet_Cpu", "BoxSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoxSet>("CustomComputersAspModel.FK_BoxSet_Cpu", "BoxSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="Hdd")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hdd : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hdd object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="producer">Initial value of the producer property.</param>
        public static Hdd CreateHdd(global::System.Int32 id, global::System.String name, global::System.String producer)
        {
            Hdd hdd = new Hdd();
            hdd.id = id;
            hdd.name = name;
            hdd.producer = producer;
            return hdd;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String producer
        {
            get
            {
                return _producer;
            }
            set
            {
                OnproducerChanging(value);
                ReportPropertyChanging("producer");
                _producer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("producer");
                OnproducerChanged();
            }
        }
        private global::System.String _producer;
        partial void OnproducerChanging(global::System.String value);
        partial void OnproducerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_BoxSet_Hdd", "BoxSet")]
        public EntityCollection<BoxSet> BoxSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoxSet>("CustomComputersAspModel.FK_BoxSet_Hdd", "BoxSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoxSet>("CustomComputersAspModel.FK_BoxSet_Hdd", "BoxSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="Material")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Material : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Material object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="stand">Initial value of the stand property.</param>
        /// <param name="display">Initial value of the display property.</param>
        public static Material CreateMaterial(global::System.Int32 id, global::System.String stand, global::System.String display)
        {
            Material material = new Material();
            material.id = id;
            material.stand = stand;
            material.display = display;
            return material;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stand
        {
            get
            {
                return _stand;
            }
            set
            {
                OnstandChanging(value);
                ReportPropertyChanging("stand");
                _stand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("stand");
                OnstandChanged();
            }
        }
        private global::System.String _stand;
        partial void OnstandChanging(global::System.String value);
        partial void OnstandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String display
        {
            get
            {
                return _display;
            }
            set
            {
                OndisplayChanging(value);
                ReportPropertyChanging("display");
                _display = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("display");
                OndisplayChanged();
            }
        }
        private global::System.String _display;
        partial void OndisplayChanging(global::System.String value);
        partial void OndisplayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Monitor_Materials1", "Monitor")]
        public EntityCollection<Monitor> Monitors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Monitor>("CustomComputersAspModel.FK_Monitor_Materials1", "Monitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Monitor>("CustomComputersAspModel.FK_Monitor_Materials1", "Monitor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="Monitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Monitor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Monitor object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="materialsId">Initial value of the materialsId property.</param>
        /// <param name="matrix">Initial value of the matrix property.</param>
        /// <param name="aspectRatio">Initial value of the aspectRatio property.</param>
        /// <param name="led">Initial value of the led property.</param>
        /// <param name="producer">Initial value of the producer property.</param>
        public static Monitor CreateMonitor(global::System.Int32 id, global::System.Int32 materialsId, global::System.String matrix, global::System.String aspectRatio, global::System.String led, global::System.String producer)
        {
            Monitor monitor = new Monitor();
            monitor.id = id;
            monitor.materialsId = materialsId;
            monitor.matrix = matrix;
            monitor.aspectRatio = aspectRatio;
            monitor.led = led;
            monitor.producer = producer;
            return monitor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 materialsId
        {
            get
            {
                return _materialsId;
            }
            set
            {
                OnmaterialsIdChanging(value);
                ReportPropertyChanging("materialsId");
                _materialsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("materialsId");
                OnmaterialsIdChanged();
            }
        }
        private global::System.Int32 _materialsId;
        partial void OnmaterialsIdChanging(global::System.Int32 value);
        partial void OnmaterialsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String matrix
        {
            get
            {
                return _matrix;
            }
            set
            {
                OnmatrixChanging(value);
                ReportPropertyChanging("matrix");
                _matrix = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("matrix");
                OnmatrixChanged();
            }
        }
        private global::System.String _matrix;
        partial void OnmatrixChanging(global::System.String value);
        partial void OnmatrixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String aspectRatio
        {
            get
            {
                return _aspectRatio;
            }
            set
            {
                OnaspectRatioChanging(value);
                ReportPropertyChanging("aspectRatio");
                _aspectRatio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("aspectRatio");
                OnaspectRatioChanged();
            }
        }
        private global::System.String _aspectRatio;
        partial void OnaspectRatioChanging(global::System.String value);
        partial void OnaspectRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String led
        {
            get
            {
                return _led;
            }
            set
            {
                OnledChanging(value);
                ReportPropertyChanging("led");
                _led = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("led");
                OnledChanged();
            }
        }
        private global::System.String _led;
        partial void OnledChanging(global::System.String value);
        partial void OnledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String producer
        {
            get
            {
                return _producer;
            }
            set
            {
                OnproducerChanging(value);
                ReportPropertyChanging("producer");
                _producer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("producer");
                OnproducerChanged();
            }
        }
        private global::System.String _producer;
        partial void OnproducerChanging(global::System.String value);
        partial void OnproducerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Configuration_Monitor", "Configuration")]
        public EntityCollection<Configuration> Configurations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Configuration>("CustomComputersAspModel.FK_Configuration_Monitor", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Configuration>("CustomComputersAspModel.FK_Configuration_Monitor", "Configuration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Monitor_Materials1", "Materials")]
        public Material Material
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("CustomComputersAspModel.FK_Monitor_Materials1", "Materials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("CustomComputersAspModel.FK_Monitor_Materials1", "Materials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Material> MaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("CustomComputersAspModel.FK_Monitor_Materials1", "Materials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Material>("CustomComputersAspModel.FK_Monitor_Materials1", "Materials", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="Peripheral")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Peripheral : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Peripheral object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="producer">Initial value of the producer property.</param>
        /// <param name="configId">Initial value of the configId property.</param>
        public static Peripheral CreatePeripheral(global::System.Int32 id, global::System.String name, global::System.String type, global::System.String producer, global::System.Int32 configId)
        {
            Peripheral peripheral = new Peripheral();
            peripheral.id = id;
            peripheral.name = name;
            peripheral.type = type;
            peripheral.producer = producer;
            peripheral.configId = configId;
            return peripheral;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String producer
        {
            get
            {
                return _producer;
            }
            set
            {
                OnproducerChanging(value);
                ReportPropertyChanging("producer");
                _producer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("producer");
                OnproducerChanged();
            }
        }
        private global::System.String _producer;
        partial void OnproducerChanging(global::System.String value);
        partial void OnproducerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configId
        {
            get
            {
                return _configId;
            }
            set
            {
                OnconfigIdChanging(value);
                ReportPropertyChanging("configId");
                _configId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("configId");
                OnconfigIdChanged();
            }
        }
        private global::System.Int32 _configId;
        partial void OnconfigIdChanging(global::System.Int32 value);
        partial void OnconfigIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Peripherals_Configuration", "Configuration")]
        public Configuration Configuration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("CustomComputersAspModel.FK_Peripherals_Configuration", "Configuration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("CustomComputersAspModel.FK_Peripherals_Configuration", "Configuration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration> ConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("CustomComputersAspModel.FK_Peripherals_Configuration", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration>("CustomComputersAspModel.FK_Peripherals_Configuration", "Configuration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="Software")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Software : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Software object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="producer">Initial value of the producer property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="configId">Initial value of the configId property.</param>
        public static Software CreateSoftware(global::System.Int32 id, global::System.String name, global::System.String producer, global::System.String type, global::System.Int32 configId)
        {
            Software software = new Software();
            software.id = id;
            software.name = name;
            software.producer = producer;
            software.type = type;
            software.configId = configId;
            return software;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String producer
        {
            get
            {
                return _producer;
            }
            set
            {
                OnproducerChanging(value);
                ReportPropertyChanging("producer");
                _producer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("producer");
                OnproducerChanged();
            }
        }
        private global::System.String _producer;
        partial void OnproducerChanging(global::System.String value);
        partial void OnproducerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configId
        {
            get
            {
                return _configId;
            }
            set
            {
                OnconfigIdChanging(value);
                ReportPropertyChanging("configId");
                _configId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("configId");
                OnconfigIdChanged();
            }
        }
        private global::System.Int32 _configId;
        partial void OnconfigIdChanging(global::System.Int32 value);
        partial void OnconfigIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_Software_Configuration", "Configuration")]
        public Configuration Configuration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("CustomComputersAspModel.FK_Software_Configuration", "Configuration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("CustomComputersAspModel.FK_Software_Configuration", "Configuration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration> ConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("CustomComputersAspModel.FK_Software_Configuration", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration>("CustomComputersAspModel.FK_Software_Configuration", "Configuration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CustomComputersAspModel", Name="VideoCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VideoCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VideoCard object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="producer">Initial value of the producer property.</param>
        public static VideoCard CreateVideoCard(global::System.Int32 id, global::System.String name, global::System.String producer)
        {
            VideoCard videoCard = new VideoCard();
            videoCard.id = id;
            videoCard.name = name;
            videoCard.producer = producer;
            return videoCard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String producer
        {
            get
            {
                return _producer;
            }
            set
            {
                OnproducerChanging(value);
                ReportPropertyChanging("producer");
                _producer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("producer");
                OnproducerChanged();
            }
        }
        private global::System.String _producer;
        partial void OnproducerChanging(global::System.String value);
        partial void OnproducerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CustomComputersAspModel", "FK_BoxSet_VideoCard", "BoxSet")]
        public EntityCollection<BoxSet> BoxSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoxSet>("CustomComputersAspModel.FK_BoxSet_VideoCard", "BoxSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoxSet>("CustomComputersAspModel.FK_BoxSet_VideoCard", "BoxSet", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
